def ChooseProv

pipeline {   
  agent {
    node {
      label 'master'
    }  
  }
  stages {
    stage('checkout') {
      steps {
        //checkout scm
        git url: 'https://github.com/ivaifua/carts.git'
       // sh 'docker --version'
       // sh 'docker pull hashicorp/terraform:light'
        
      }
    }
     
    stage('init') {
    steps {     
             script{
            //Setting path to tool Terraform
            def tfHome = tool name: 'Terraform'
            env.PATH = "${tfHome}:${env.PATH}"
            
            //Remove the terraform state file so we always start from a clean state
            if (fileExists(".terraform/terraform.tfstate")) {
               sh "rm -rf .terraform/terraform.tfstate"
           }
            if (fileExists("status")) {
               sh "rm status"
            }
            }
    
           sh 'terraform init' 
           sh 'terraform  version'
       
      }
    
    }
    stage('planning') {
      steps {
         sh 'terraform plan'
     
      }
    }
    
    stage('choosing parameters') { 
    
    steps {       
      script {
       ChooseProv = input message: 'Choose operation', ok: 'SET', 
            parameters: [
                choice(
                name: 'Provision',
                choices:"Apply\nDestroy",
                description: "Choose what you whant to do")
            ]  
      }
    }
    }
      
    stage('approval') {
    steps {    
        script {
                    if (ChooseProv == "Apply") {
                        sh 'terraform plan -out=plan'
                        sh 'terraform apply plan'
   
                    } else if (ChooseProv == "Destroy") {
                        sh 'terraform destroy -auto-approve'
                    }
                    
              }      
    }
    }
    }   
    }
 
